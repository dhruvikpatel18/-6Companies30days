class Solution {
    public int maxSum(int[][] grid) {
        //We are looping for row-2 times because consider we have 3 rows then we will iterate only 1 time because when we are on 1 row we can form an hourglass but when we are on second or third row we can't form hourglass because we need to have atleast 2 rows below to form a hourglass
        int ans = 0;
        for(int i=0; i<grid.length-2; i++){
            for(int j=0; j<grid[0].length-2; j++){
                int sum = grid[i][j]+grid[i][j+1]+grid[i][j+2]+grid[i+1][j+1]+grid[i+2][j]+grid[i+2][j+1]+grid[i+2][j+2];
                ans = Math.max(ans,sum);
            }
        }
        return ans;
    }
}