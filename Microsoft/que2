class Solution{
    List<List<Integer>> finalRes = new ArrayList<>();
    List<Integer> res = new ArrayList<>();
    public List<List<Integer>> combinationSum3(int k, int n){
        helper(k,n,1); //start from->1
        return finalRes;
    }
    private void helper(int k, int n, int start){
        if(n<0 || k<0)return;
        if(n==0 && k==0){
            finalRes.add(new ArrayList<>(res));
            return;
        }
        for(int i=1; i<10; i++){
            res.add(i);
            helper(k-1,n-i,i+1);
            //backtrack
            res.remove(res.size()-1);
        }
    }
}