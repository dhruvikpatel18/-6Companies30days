class Solution {
    //TC:O(n), SC:(1)
    public int maxPoints(int[][] points) {
        //check for slope = tan(theta) => (y2-y1)/(x2-x1)
        // => (y2-y1)/(x2-x1)== (y3-y2)/(x3-x2)
        //=> for simplify division => (y2-y1)*(x3-x2) == (y3-y2)*(x2-x1)
        int n = points.length;
        int max = 0;
        if(n <= 2) return n;
        for(int i=0; i<n; i++){
            for(int j=i+1; j<n; j++){
                int x1 = points[i][0], y1 = points[i][1], x2 = points[j][0], y2 = points[j][1];
                int count = 2;//bcz we taken 2 points already till now
                for(int k = j+1; k<n; k++){
                    int x3 = points[k][0], y3 = points[k][1];
                    if((y2-y1)*(x3-x2) == (y3-y2)*(x2-x1)){
                        count++;
                    }
                }
                max = Math.max(max,count);
            }
        }
        return max;
    }
}